version: '3.8'

services:
  postgresql:
    image: postgres:14
    container_name: ${DB_CONTAINER_NAME}
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgresql
      POSTGRES_PORT: 5438
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - 5438
    ports:
      - "5438:5438"
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
    command: ["postgres", "-c", "port=5438"]
  redis:
    image: redis:6.2-alpine
    restart: always
    container_name: ${CACHE_CONTAINER_NAME}
    env_file:
      - .env
    environment:
      REDIS_DB: ${REDIS_DB}
    expose:
      - 6235
    ports:
      - "6235:6235"
    volumes:
      - user_redis_data:/data
    command: ["redis-server", "--port", "6235"]

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${SERVICE_CONTAINER_NAME}
    env_file:
      - .env
    environment:
      ENVIRONMENT: dev
      DEBUG: ${DEBUG}
      DB_TIMEOUT: ${DB_TIMEOUT}
      DB_POOL_SIZE: ${DB_POOL_SIZE}
      DB_MAX_POOL_CON: ${DB_MAX_POOL_CON}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_DB: ${REDIS_DB}
      REDIS_PORT: ${REDIS_PORT}
      CONTAINER_NAME: ${SERVICE_CONTAINER_NAME}
      SERVICE_PORT: ${SERVICE_PORT}
    depends_on:
      - postgresql
      - redis
    ports:
      - "5020:5020"
    expose:
      - 5020
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  user_postgres_data:
  user_redis_data:
